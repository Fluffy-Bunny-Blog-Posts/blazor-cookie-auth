@inject FluffyBunny.BlazorCookieAuth.Services.IAuthStatusService AuthStatusService
@inject BlazorApp1.Services.ISimpleService SimpleService
@inject BlazorApp1.Services.IFakeTokenFetchService FakeTokenFetchService
@inject BlazorApp1.Services.IClientMemoryCache ClientMemoryCache
@page "/"
<h1>Hello, world!</h1>



<button class="btn btn-primary" @onclick="CheckAuthAsync">Check Auth</button>
<button class="btn btn-primary" @onclick="PingAsync">xip.io ping</button>
<button class="btn btn-primary" @onclick="FetchToken">FetchToken</button>
@{
    if (tokenResponse != null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Key</th>
                    <th>Value</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@nameof(tokenResponse.Authority)</td>
                    <td>@tokenResponse.Authority</td>
                </tr>
                <tr>
                    <td>@nameof(tokenResponse.ClientId)</td>
                    <td>@tokenResponse.ClientId</td>
                </tr>
                <tr>
                    <td>@nameof(tokenResponse.AccessToken)</td>
                    <td>@tokenResponse.AccessToken</td>
                </tr>
                <tr>
                    <td>@nameof(tokenResponse.ExpiresIn)</td>
                    <td>@tokenResponse.ExpiresIn</td>
                </tr>
                <tr>
                    <td>@nameof(tokenResponse.RefreshToken)</td>
                    <td>@tokenResponse.RefreshToken</td>
                </tr>
                <tr>
                    <td>@nameof(tokenResponse.TokenEndpoint)</td>
                    <td>@tokenResponse.TokenEndpoint</td>
                </tr>
                <tr>
                    <td>@nameof(tokenResponse.TokenType)</td>
                    <td>@tokenResponse.TokenType</td>
                </tr>
            </tbody>
        </table>
    }
}
@code {
    private int currentCount = 0;
    private BlazorApp1.Services.TokenResponse tokenResponse = null;
    private async Task CheckAuthAsync()
    {
        await AuthStatusService.CheckAsync();
    }
    private async Task PingAsync()
    {
        await SimpleService.PingAsync();
    }
    private async Task FetchToken()
    {
        var value = ClientMemoryCache.GetValue<BlazorApp1.Services.TokenResponse>("_tokenResponse");
        if(value == null)
        {
            tokenResponse = await FakeTokenFetchService.GetFakeBearerTokenAsync();
            ClientMemoryCache.SetValue("_tokenResponse", tokenResponse);

        }
        else
        {
            tokenResponse = value;
        }
    }

}
